library(gridExtra)
# compare with National Average Flow
pd = as.data.frame(t(as.matrix(dat_A_US[1:3,8:ncol(dat_A_US)])))
d = cbind(rownames(pd), data.frame(pd, row.names=NULL))
colnames(d) = c("Dates","driving", "transit", "walking")
d$Dates = as.Date(d$Dates)
rm(d,dat,dd,dd2,df,p,p1,p2,pd,pdat,pp,plist)
rm(sdat)
rm(i,j,num,s,region)
#change the column names to dates
for(i in 7:length(names(dat_A_US))){
num = substring(names(dat_A_US)[i], 2)
names(dat_A_US)[i] = format(as.Date(as.numeric(num), origin = "1899-12-30"),format = "%Y-%m-%d")
}
# compare with National Average Flow
pd = as.data.frame(t(as.matrix(dat_A_US[1:3,8:ncol(dat_A_US)])))
d = cbind(rownames(pd), data.frame(pd, row.names=NULL))
colnames(d) = c("Dates","driving", "transit", "walking")
d$Dates = as.Date(d$Dates)
d$Dates
View(d)
View(dat_A_US)
dat_G_CA = as.data.frame(read.xlsx("Mobility_G.xlsx", sheetName = "Sample_Google_CANADA")) #CA
# Load the packages.
if (!require(xlsx)) {
install.packages("xlsx")
}
if (!require(tidyverse)) {
install.packages("tidyverse")
}
library(xlsx)
library(tidyverse)
library(ggplot2)
library(gridExtra)
dat_G_CA = as.data.frame(read.xlsx("Mobility_G.xlsx", sheetName = "Sample_Google_CANADA")) #CA
View(dat_G_CA)
p = ggplot(data = dat_G_CA, aes(x = date, y = transit_stations_percent_change_from_baseline)) + geom_line(color = "#00AFBB", size = 1) + xlab("") + ylab("Mobility") + ggtitle("Transit Mobility in Canada") + theme_minimal()
p + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + scale_x_date(date_labels = "%y %b %d") + geom_hline(yintercept = 100, linetype = "dashed")
p = ggplot(data = dat_G_CA, aes(x = date, y = transit_stations_percent_change_from_baseline)) + geom_line(color = "#00AFBB", size = 1) + xlab("") + ylab("Mobility") + ggtitle("Transit Mobility in Canada") + theme_minimal()
p + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + scale_x_date(date_labels = "%y %b %d") + geom_hline(yintercept = 0, linetype = "dashed") + geom_vline(xintercept = as.Date("2020-01-20"), color = "blue")
names(dat_G_CA)
colnames(dat_G_CA)
names(dat_G_CA)[8, ncol(dat_G_CA)] = c("Retail & Recreation", "Grocery & Pharmacy", "Parks", "Transit Stations", "Workplaces", "Residential" )
names(dat_G_CA)[8, ncol(dat_G_CA)]
names(dat_G_CA)[8:ncol(dat_G_CA)] = c("Retail & Recreation", "Grocery & Pharmacy", "Parks", "Transit Stations", "Workplaces", "Residential")
names(dat_G_CA)
p1 = ggplot(data = dat_G_CA, aes(x = date, y = Transit Stations)) + geom_line(color = "#00AFBB", size = 1) + xlab("") + ylab("Mobility (% change)") + ggtitle("Transit Mobility in Canada") + theme_minimal()
p1 + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + scale_x_date(date_labels = "%y %b %d") + geom_hline(yintercept = 0, linetype = "dashed")
p1 = ggplot(data = dat_G_CA, aes(x = date, y = Transit Stations)) + geom_line(color = "#00AFBB", size = 1) + xlab("") + ylab("Mobility (% change)") + ggtitle("Transit Mobility in Canada") + theme_minimal()
p1 + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + scale_x_date(date_labels = "%y %b %d") + geom_hline(yintercept = 0, linetype = "dashed")
p1 = ggplot(data = dat_G_CA, aes(x = date, y = Transit Stations)) + geom_line(color = "#00AFBB", size = 1) + xlab("") + ylab("Mobility (% change)") + ggtitle("Transit Mobility in Canada") + theme_minimal()
dat_G_CA$date = as.Date(dat_G_CA$date)
names(dat_G_CA)[8:ncol(dat_G_CA)] = c("Retail&Recreation", "Grocery&Pharmacy", "Parks", "Transit.Stations", "Workplaces", "Residential")
p1 = ggplot(data = dat_G_CA, aes(x = date, y = Transit.Stations)) + geom_line(color = "#00AFBB", size = 1) + xlab("") + ylab("Mobility (% change)") + ggtitle("Transit Mobility in Canada") + theme_minimal()
p1 + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + scale_x_date(date_labels = "%y %b %d") + geom_hline(yintercept = 0, linetype = "dashed")
df = dat_G_CA %>%
select(names(dat_G_CA)[7:ncol(dat_G_CA)])
df
View(df)
df = dat_G_CA %>%
filter(is.na(sub_region_1)) %>%
select(names(dat_G_CA)[7:ncol(dat_G_CA)]) %>%
gather(key = "Places", value = "value", -date)
View(df)
p2 = ggplot(df, aes(x = date, y = value)) + geom_line(aes(color = Places), size = 1) + xlab("") + ylab("Mobility (% change)") + ggtitle("Mobility within Canada") + theme_minimal()
p2 + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + scale_x_date(date_labels = "%y %b %d") + geom_hline(yintercept = 100, linetype = "dashed")
a = c(1,2)
b = a.pop(2)
b = a[-2]
b
names(dat_G_CA)[7:ncol(dat_G_CA)][-5]
df = dat_G_CA %>%
filter(is.na(sub_region_1)) %>%
select(names(dat_G_CA)[7:ncol(dat_G_CA)][-5]) %>%
gather(key = "Places", value = "value", -date)
p2 = ggplot(df, aes(x = date, y = value)) + geom_line(aes(color = Places), size = 1) + xlab("") + ylab("Mobility (% change)") + ggtitle("Mobility within Canada") + theme_minimal()
p2 + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + scale_x_date(date_labels = "%y %b %d") + geom_hline(yintercept = 0, linetype = "dashed")
table(dat_G_CA$sub_region_2)
sdat = dat_G_CA %>%
filter(!is.na(sub_region_1)) %>%
select(names(dat_G_CA)[7:ncol(dat_G_CA)])
View(sdat)
sdat = dat_G_CA %>%
filter(!is.na(sub_region_1)) %>%
select(sub_region_1, names(dat_G_CA)[7:ncol(dat_G_CA)])
View(sdat)
names(sdat)[1] = "Province"
unique(sdat$Province)
sdat1 = dat_G_CA %>%
filter(!is.na(sub_region_1)) %>%
select(sub_region_1, date, Transit.Stations)
names(sdat1)[1] = "Province"
sdat1 = dat_G_CA %>%
filter(!is.na(sub_region_1)) %>%
select(sub_region_1, date, Transit.Stations) %>%
names(.)[1] = "Province" %>%
gather(key = "Province", value = "value", -Dates)
sdat1 = dat_G_CA %>%
filter(!is.na(sub_region_1)) %>%
select(sub_region_1, date, Transit.Stations) %>%
names(.)[1] = "Province"
sdat1 = dat_G_CA %>%
filter(!is.na(sub_region_1)) %>%
select(sub_region_1, date, Transit.Stations)
sdat1 = dat_G_CA %>%
filter(!is.na(sub_region_1)) %>%
select(sub_region_1, date, Transit.Stations) %>%
gather(key = "Province", value = "value", -Dates)
sdat1 = dat_G_CA %>%
filter(!is.na(sub_region_1)) %>%
select(sub_region_1, date, Transit.Stations)
View(sdat1)
sdat1 = dat_G_CA %>%
filter(!is.na(sub_region_1)) %>%
select(sub_region_1, date, Transit.Stations) %>%
rename(sub_region_1 = "Province") %>%
gather(key = "Province", value = "value", -Dates)
sdat1 = dat_G_CA %>%
filter(!is.na(sub_region_1)) %>%
select(sub_region_1, date, Transit.Stations) %>%
rename(sub_region_1 = "Province")
sdat1 = dat_G_CA %>%
filter(!is.na(sub_region_1)) %>%
select(sub_region_1, date, Transit.Stations) %>%
rename(sub_region_1 = Province)
sdat1 = dat_G_CA %>%
filter(!is.na(sub_region_1)) %>%
select(sub_region_1, date, Transit.Stations) %>%
rename(Province = sub_region_1) %>%
gather(key = "Province", value = "value", -Dates)
sdat1 = dat_G_CA %>%
filter(!is.na(sub_region_1)) %>%
select(sub_region_1, date, Transit.Stations) %>%
rename(Province = sub_region_1) %>%
gather(key = "Province", value = "value", -date)
sdat1 = dat_G_CA %>%
filter(!is.na(sub_region_1)) %>%
select(sub_region_1, date, Transit.Stations) %>%
rename(Province = sub_region_1)
?gather
df = dat_G_CA %>%
filter(is.na(sub_region_1)) %>%
select(names(dat_G_CA)[7:ncol(dat_G_CA)][-5]) %>%
gather(key = "Places", value = "value", -date)
View(df)
sdat1 = dat_G_CA %>%
filter(!is.na(sub_region_1)) %>%
select(sub_region_1, date, Transit.Stations) %>%
rename(Province = sub_region_1) %>%
gather(key = "Province", value = "value", -dates)
sdat1 = dat_G_CA %>%
filter(!is.na(sub_region_1)) %>%
select(sub_region_1, date, Transit.Stations) %>%
rename(Province = sub_region_1) %>%
gather(key = "Province", value = "value", -dates)
sdat1 = dat_G_CA %>%
filter(!is.na(sub_region_1)) %>%
select(sub_region_1, date, Transit.Stations) %>%
rename(Province = sub_region_1) %>%
gather(key = "Province", value = "value", -date)
sdat1 = dat_G_CA %>%
filter(!is.na(sub_region_1)) %>%
select(sub_region_1, date, Transit.Stations) %>%
rename(Province = sub_region_1) %>%
gather(key = "Province", value = "value", -Province)
sdat1 = dat_G_CA %>%
filter(!is.na(sub_region_1)) %>%
select(sub_region_1, date, Transit.Stations) %>%
rename(Province = sub_region_1) %>%
gather(key = "Province", value = "value", -value)
sdat1 = dat_G_CA %>%
filter(!is.na(sub_region_1)) %>%
select(date, sub_region_1, Transit.Stations) %>%
rename(Province = sub_region_1)
sdat1 = dat_G_CA %>%
filter(!is.na(sub_region_1)) %>%
select(date, sub_region_1, Transit.Stations) %>%
rename(Province = sub_region_1) %>%
gather(key = "Province", value = "value", -date)
sdat1 = dat_G_CA %>%
filter(!is.na(sub_region_1)) %>%
select(date, sub_region_1, Transit.Stations) %>%
rename(Province = sub_region_1)
View(sdat1)
p = ggplot(data = sdat1, aes(x = date, y = Transit.Stations)) + geom_line(color = Provinces, size = 0.5) + xlab("") + ylab("Mobility (% change)") + ggtitle("Transit Mobility in All Provinces") + theme_minimal()
p3 = p + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + scale_x_date(date_labels = "%y %b %d") + geom_hline(yintercept = 0, linetype = "dashed")
sdat1 = dat_G_CA %>%
filter(!is.na(sub_region_1)) %>%
select(date, sub_region_1, Transit.Stations) %>%
rename(Provinces = sub_region_1)
p = ggplot(data = sdat1, aes(x = date, y = Transit.Stations)) + geom_line(color = Provinces, size = 0.5) + xlab("") + ylab("Mobility (% change)") + ggtitle("Transit Mobility in All Provinces") + theme_minimal()
View(df)
p = ggplot(data = sdat1, aes(x = date, y = Transit.Stations)) + geom_line(aes(color = Provinces), size = 0.5) + xlab("") + ylab("Mobility (% change)") + ggtitle("Transit Mobility in All Provinces") + theme_minimal()
p3 = p + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + scale_x_date(date_labels = "%y %b %d") + geom_hline(yintercept = 0, linetype = "dashed")
p3
sdat2 = dat_G_CA %>%
filter(!is.na(sub_region_1)) %>%
select(sub_region_1, names(dat_G_CA)[7:ncol(dat_G_CA)][-5]) %>%
rename(Provinces = sub_region_1)
rm(sdat)
View(sdat2)
sdat2 = dat_G_CA %>%
filter(!is.na(sub_region_1)) %>%
select(names(dat_G_CA)[7:ncol(dat_G_CA)][-5], sub_region_1) %>%
rename(Provinces = sub_region_1) %>%
gather(key = "Provinces", value = "value", -date)
floor(sqrt(10))
sdat2 = dat_G_CA %>%
filter(!is.na(sub_region_1)) %>%
select(names(dat_G_CA)[7:ncol(dat_G_CA)][-5], sub_region_1) %>%
rename(Provinces = sub_region_1) %>%
gather(key = "Provinces", value = "value", -date)
num = unique(sdat2$Provinces)
j = 1
plist = list()
for (i in 1:length(num)){
region = num[i]
pp = ggplot(sdat2, aes(x = date, y = value)) + geom_line(aes(color = Provinces), size = 0.5) +  xlab("") + ylab("Mobility (% change)") + ggtitle(paste("Change of Mobility in Province", region)) + theme_minimal()
p4 = pp + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + scale_x_date(date_labels = "%y %b %d") + geom_hline(yintercept = 0, linetype = "dashed")
plist[[j]] = p4
j = j + 1
}
do.call("grid.arrange", c(plist, ncol = floor(sqrt(length(num)))))
sdat2 = dat_G_CA %>%
filter(!is.na(sub_region_1)) %>%
select(names(dat_G_CA)[7:ncol(dat_G_CA)][-5], sub_region_1)
sdat2 = dat_G_CA %>%
filter(!is.na(sub_region_1)) %>%
select(names(dat_G_CA)[7:ncol(dat_G_CA)][-5], sub_region_1) %>%
rename(Provinces = sub_region_1) %>%
gather(key = "Provinces", value = "value", -c(date, Provinces))
unique(sdat1$Provinces)
sdat2 = dat_G_CA %>%
filter(!is.na(sub_region_1)) %>%
select(names(dat_G_CA)[7:ncol(dat_G_CA)][-5]) %>%
gather(key = "Places", value = "value", -c(date, Provinces))
sdat2 = dat_G_CA %>%
filter(!is.na(sub_region_1)) %>%
select(names(dat_G_CA)[7:ncol(dat_G_CA)][-5]) %>%
gather(key = "Places", value = "value", -date)
sdat2 = dat_G_CA %>%
filter(!is.na(sub_region_1)) %>%
select(names(dat_G_CA)[7:ncol(dat_G_CA)][-5]) %>%
gather(key = "Places", value = "value", -date)
num = unique(sdat1$Provinces)
j = 1
plist = list()
for (i in 1:length(num)){
region = num[i]
pp = ggplot(sdat2, aes(x = date, y = value)) + geom_line(aes(color = Provinces), size = 0.5) +  xlab("") + ylab("Mobility (% change)") + ggtitle(paste("Change of Mobility in Province", region)) + theme_minimal()
p4 = pp + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + scale_x_date(date_labels = "%y %b %d") + geom_hline(yintercept = 0, linetype = "dashed")
plist[[j]] = p4
j = j + 1
}
do.call("grid.arrange", c(plist, ncol = floor(sqrt(length(num)))))
sdat2 = dat_G_CA %>%
filter(!is.na(sub_region_1)) %>%
select(names(dat_G_CA)[7:ncol(dat_G_CA)][-5]) %>%
gather(key = "Places", value = "value", -date)
num = unique(sdat1$Provinces)
j = 1
plist = list()
for (i in 1:length(num)){
region = num[i]
pp = ggplot(sdat2, aes(x = date, y = value)) + geom_line(aes(color = Places), size = 0.5) +  xlab("") + ylab("Mobility (% change)") + ggtitle(paste("Change of Mobility in Province", region)) + theme_minimal()
p4 = pp + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + scale_x_date(date_labels = "%y %b %d") + geom_hline(yintercept = 0, linetype = "dashed")
plist[[j]] = p4
j = j + 1
}
do.call("grid.arrange", c(plist, ncol = floor(sqrt(length(num)))))
warnings()
p = ggplot(data = sdat1, aes(x = date, y = Transit.Stations)) + geom_line(aes(color = Provinces), size = 0.8) + xlab("") + ylab("Mobility (% change)") + ggtitle("Change of Transit Mobility in All Provinces") + theme_minimal()
p3 = p + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + scale_x_date(date_labels = "%y %b %d") + geom_hline(yintercept = 0, linetype = "dashed") + scale_color_brewer(palette = "Dark2")
p3
p = ggplot(data = sdat1, aes(x = date, y = Transit.Stations)) + geom_line(aes(color = Provinces), size = 0.4) + xlab("") + ylab("Mobility (% change)") + ggtitle("Change of Transit Mobility in All Provinces") + theme_minimal()
p + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + scale_x_date(date_labels = "%y %b %d") + geom_hline(yintercept = 0, linetype = "dashed") + scale_color_brewer(palette = "Dark2")
p = ggplot(data = sdat1, aes(x = date, y = Transit.Stations)) + geom_line(aes(color = Provinces), size = 0.4) + xlab("") + ylab("Mobility (% change)") + ggtitle("Change of Transit Mobility in All Provinces") + theme_minimal()
p + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + scale_x_date(date_labels = "%y %b %d") + geom_hline(yintercept = 0, linetype = "dashed") + scale_color_brewer(palette = "Set2")
p = ggplot(data = sdat1, aes(x = date, y = Transit.Stations)) + geom_line(aes(color = Provinces), size = 0.4) + xlab("") + ylab("Mobility (% change)") + ggtitle("Change of Transit Mobility in All Provinces") + theme_minimal()
p + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + scale_x_date(date_labels = "%y %b %d") + geom_hline(yintercept = 0, linetype = "dashed") + scale_color_brewer(palette = "Set3")
p = ggplot(data = sdat1, aes(x = date, y = Transit.Stations)) + geom_line(aes(color = Provinces), size = 0.4) + xlab("") + ylab("Mobility (% change)") + ggtitle("Change of Transit Mobility in All Provinces") + theme_minimal()
p + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + scale_x_date(date_labels = "%y %b %d") + geom_hline(yintercept = 0, linetype = "dashed") + scale_color_brewer(palette = "Set3", n = 13)
p = ggplot(data = sdat1, aes(x = date, y = Transit.Stations)) + geom_line(aes(color = Provinces), size = 0.4) + xlab("") + ylab("Mobility (% change)") + ggtitle("Change of Transit Mobility in All Provinces") + theme_minimal()
p + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + scale_x_date(date_labels = "%y %b %d") + geom_hline(yintercept = 0, linetype = "dashed")
p = ggplot(data = sdat1, aes(x = date, y = Transit.Stations)) + geom_line(aes(color = Provinces), size = 0.4) + xlab("") + ylab("Mobility (% change)") + ggtitle("Change of Transit Mobility in All Provinces") + theme_minimal()
p + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + scale_x_date(date_labels = "%y %b %d") + geom_hline(yintercept = 0, linetype = "dashed")
dat_G_CA
# Load the packages.
if (!require(xlsx)) {
install.packages("xlsx")
}
if (!require(tidyverse)) {
install.packages("tidyverse")
}
library(xlsx)
library(tidyverse)
library(ggplot2)
library(gridExtra)
?ts.plot()
dat_G_CA %>%
ts.plot(Transit.Stations)
View(dat_G_CA)
ts.plot(dat_G_CA$Transit.Stations)
plot(stl(dat_G_CA$Transit.Stations))
dat_G_CA %>%Transit.Stations
ddd = dat_G_CA %>%select(date,Transit.Stations)
as.ts(ddd)
ddd
View(ddd)
dddd = as.ts(ddd)
plot(stl(dddd))
View(dddd)
plot(decompose(dddd))
glimpse(dddd)
dddd
View(ddd)
ddd %>% rownames(.) = ddd[,1]
rownames(ddd) = ddd[,1]
ddd[,1]
rownames(ddd)
rownames(ddd) =  as.vector(ddd[,1])
?diff
library(lubridate)
View(ddd)
View(dat_G_CA)
ts (ddd[,-1], frequency = 366, start = decimal_date(ddd[1,1]), end = decimal_date(dat_G_CA$date[nrow(dat_G_CA),7]))
ddd[,-1]
s = decimal_date(dat_G_CA[1,7])
s
e = decimal_date(dat_G_CA$date[nrow(dat_G_CA),7]))
e = decimal_date(dat_G_CA[nrow(dat_G_CA),7]))
e = decimal_date(dat_G_CA[nrow(dat_G_CA),7])
e
ts(ddd[,-1], frequency = 366, start = s, end = e)
plot(stl(tsd))
tsd = ts(ddd[,-1], frequency = 366, start = s, end = e)
plot(stl(tsd))
tsd
times(tsd)
time(tsd)
plot(stl(tsd, "periodic"))
?ts
tsd = ts(ddd[,-1], start = s, end = e, frequency = 366)
plot(stl(tsd, "periodic"))
tsd = ts(ddd[,-1], start = s, end = e, frequency = 52)
(473-123)/7
tsd = ts(ddd[,-1], start = s, end = e, frequency = 50)
tsd = ts(ddd[,-1], start = s, end = e, frequency = 25)
tsd = ts(ddd[,-1], start = s, end = e, frequency = 365.25)
# Load the packages.
if (!require(xlsx)) {
install.packages("xlsx")
}
if (!require(tidyverse)) {
install.packages("tidyverse")
}
library(xlsx)
library(tidyverse)
library(ggplot2)
library(gridExtra)
View(pd)
View(sdat1)
View(sdat1)
View(pd)
View(p3)
View(p1)
View(df)
View(ddd)
View(d)
View(dat_A_US)
ncol(dat_A_us)
View(dat_A_US)
dat_A_US
dat_A_us[,7]
ncol(dat_A_us)
dat_A_US = as.data.frame(read.xlsx("Mobility_A.xlsx", sheetName = "Sample_Apple_UNITED STATES")) #US
#dat_A_CA = as.data.frame(read.xlsx("Mobility_A.xlsx", sheetName = "Sample_Apple_CANADA")) #CA
#can only load one dataset at a time
# Load the packages.
if (!require(xlsx)) {
install.packages("xlsx")
}
if (!require(tidyverse)) {
install.packages("tidyverse")
}
library(xlsx)
library(tidyverse)
library(ggplot2)
library(gridExtra)
dat_A_US = as.data.frame(read.xlsx("Mobility_A.xlsx", sheetName = "Sample_Apple_UNITED STATES")) #US
# Load the packages.
if (!require(xlsx)) {
install.packages("xlsx")
}
if (!require(tidyverse)) {
install.packages("tidyverse")
}
library(xlsx)
library(tidyverse)
library(ggplot2)
library(gridExtra)
dat_A_US = as.data.frame(read.xlsx("Mobility_A.xlsx", sheetName = "Sample_Apple_UNITED STATES")) #US
#dat_A_CA = as.data.frame(read.xlsx("Mobility_A.xlsx", sheetName = "Sample_Apple_CANADA")) #CA
#can only load one dataset at a time
#change the column names to dates
for(i in 7:length(names(dat_A_US))){
num = substring(names(dat_A_US)[i], 2)
names(dat_A_US)[i] = format(as.Date(as.numeric(num), origin = "1899-12-30"),format = "%Y-%m-%d")
dat_A_US[, i] = (dat_A_US[, i] - 100)/100
}
View(dat_A_US)
# compare with National Average Flow
pd = as.data.frame(t(as.matrix(dat_A_US[1:3,8:ncol(dat_A_US)])))
d = cbind(rownames(pd), data.frame(pd, row.names=NULL))
colnames(d) = c("Dates","driving", "transit", "walking")
d$Dates = as.Date(d$Dates)
# to plot for only one type:
p = ggplot(data = d, aes(x = Dates, y = transit)) + geom_line(color = "#00AFBB", size = 1) + xlab("") + ylab("Mobility") + ggtitle("Transit Mobility in USA") + theme_minimal()
p + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + scale_x_date(date_labels = "%y %b %d") + geom_hline(yintercept = 0, linetype = "dashed") + geom_vline(xintercept = as.Date("2020-01-20"), color = "blue")
# to plot for two types:
df = d  %>%
select(Dates, walking, driving) %>%
gather(key = "Types", value = "value", -Dates)
p = ggplot(df, aes(x = Dates, y = value)) + geom_line(aes(color = Types), size = 1) + scale_color_manual(values = c("#228B22", "#E7B800")) + xlab("") + ylab("Mobility") + ggtitle("Walking and Driving Mobility in USA") + theme_minimal()
p + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + scale_x_date(date_labels = "%y %b %d") + geom_hline(yintercept = 0, linetype = "dashed") + geom_vline(xintercept = as.Date("2020-01-20"), color = "blue")
# Compare with Inter-city Flows
s = sort(table(dat_A_US$sub.region), decreasing = TRUE)
# Choose the sub region New York as an example
sdat = dat_A_US %>%
filter(sub.region == "New York") %>%
filter(geo_type == "city")
pdat = as.data.frame(t(as.matrix(sdat[,8:ncol(sdat)])))
dat = cbind(rownames(pdat), data.frame(pdat, row.names=NULL))
colnames(dat) = c("Dates",as.vector(sdat[,3]))
dat$Dates = as.Date(dat$Dates)
# write a for loop: rearrange data set -> plot
num = unique(sdat$region)
j = 1
plist = list()
for (i in 1:length(num)){
dd = cbind(dat$Dates, dat[,(3*i-1):(3*i+1)])
colnames(dd) = c("Dates","driving", "transit", "walking")
region = num[i]
p = ggplot(dd, aes(x = Dates, y = transit)) + geom_line(color = "#00AFBB", size = 1) + xlab("") + ylab("Mobility") + ggtitle(paste("Transit Mobility in", region)) + theme_minimal()
p1 = p + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + scale_x_date(date_labels = "%y %b %d") + geom_hline(yintercept = 0, linetype = "dashed") + geom_vline(xintercept = as.Date("2020-01-20"), color = "blue")
dd2 = dd  %>%
select(Dates, walking, driving) %>%
gather(key = "Types", value = "value", -Dates)
pp = ggplot(dd2, aes(x = Dates, y = value)) + geom_line(aes(color = Types), size = 1) + scale_color_manual(values = c("#228B22", "#E7B800")) + xlab("") + ylab("Mobility") + ggtitle(paste("Walking and Driving Mobility in", region)) + theme_minimal()
p2 = pp + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + scale_x_date(date_labels = "%y %b %d") + geom_hline(yintercept = 0, linetype = "dashed") + geom_vline(xintercept = as.Date("2020-01-20"), color = "blue")
plist[[j]] = p1
plist[[j + 1]] = p2
j = j + 2
}
do.call("grid.arrange", c(plist, ncol = 2))
do.call("grid.arrange", c(plist, ncol = 2))
p = ggplot(df, aes(x = Dates, y = value)) + geom_line(aes(color = Types), size = 1) + scale_color_manual(values = c("#228B22", "#E7B800")) + xlab("") + ylab("Mobility (% change)") + ggtitle("Walking and Driving Mobility in USA") + theme_minimal()
p + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + scale_x_date(date_labels = "%y %b %d") + geom_hline(yintercept = 0, linetype = "dashed") + geom_vline(xintercept = as.Date("2020-01-20"), color = "blue")
p = ggplot(data = d, aes(x = Dates, y = transit)) + geom_line(color = "#00AFBB", size = 1) + xlab("") + ylab("Mobility (% change)") + ggtitle("Transit Mobility in USA") + theme_minimal()
p + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + scale_x_date(date_labels = "%y %b %d") + geom_hline(yintercept = 0, linetype = "dashed") + geom_vline(xintercept = as.Date("2020-01-20"), color = "blue")
do.call("grid.arrange", c(plist, ncol = 2))
# Load the packages.
if (!require(xlsx)) {
install.packages("xlsx")
}
if (!require(tidyverse)) {
install.packages("tidyverse")
}
library(xlsx)
library(tidyverse)
library(ggplot2)
library(gridExtra)
p1 = ggplot(data = dat_G_CA, aes(x = date, y = Transit.Stations)) + geom_line(color = "#00AFBB", size = 1) + xlab("") + ylab("Mobility (% change)") + ggtitle("Change of Transit Mobility in Canada") + theme_minimal()
p1 + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + scale_x_date(date_labels = "%y %b %d") + geom_hline(yintercept = 0, linetype = "dashed")
p2 = ggplot(df, aes(x = date, y = value)) + geom_line(aes(color = Places), size = 0.5) + xlab("") + ylab("Mobility (% change)") + ggtitle("Change of Change of Mobility within Canada") + theme_minimal()
p2 + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + scale_x_date(date_labels = "%y %b %d") + geom_hline(yintercept = 0, linetype = "dashed")
df = dat_G_CA %>%
filter(is.na(sub_region_1)) %>%
select(names(dat_G_CA)[7:ncol(dat_G_CA)][-5]) %>%
gather(key = "Places", value = "value", -date)
p2 = ggplot(df, aes(x = date, y = value)) + geom_line(aes(color = Places), size = 0.5) + xlab("") + ylab("Mobility (% change)") + ggtitle("Change of Change of Mobility within Canada") + theme_minimal()
p2 + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + scale_x_date(date_labels = "%y %b %d") + geom_hline(yintercept = 0, linetype = "dashed")
p2 = ggplot(df, aes(x = date, y = value)) + geom_line(aes(color = Places), size = 0.5) + xlab("") + ylab("Mobility (% change)") + ggtitle("Change of Mobility within Canada") + theme_minimal()
p2 + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + scale_x_date(date_labels = "%y %b %d") + geom_hline(yintercept = 0, linetype = "dashed")
p = ggplot(data = sdat1, aes(x = date, y = Transit.Stations)) + geom_line(aes(color = Provinces), size = 0.4) + xlab("") + ylab("Mobility (% change)") + ggtitle("Change of Transit Mobility in All Provinces") + theme_minimal()
p + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + scale_x_date(date_labels = "%y %b %d") + geom_hline(yintercept = 0, linetype = "dashed")
p3
do.call("grid.arrange", c(plist, ncol = floor(sqrt(length(num)))))
do.call("grid.arrange", c(plist, ncol = floor(sqrt(length(num)))))
sdat2 = dat_G_CA %>%
filter(!is.na(sub_region_1)) %>%
select(names(dat_G_CA)[7:ncol(dat_G_CA)][-5]) %>%
gather(key = "Places", value = "value", -date)
num = unique(sdat1$Provinces)
j = 1
plist = list()
for (i in 1:length(num)){
region = num[i]
pp = ggplot(sdat2, aes(x = date, y = value)) + geom_line(aes(color = Places), size = 0.5) +  xlab("") + ylab("Mobility (% change)") + ggtitle(paste("Change of Mobility in Province", region)) + theme_minimal()
p3 = pp + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + scale_x_date(date_labels = "%y %b %d") + geom_hline(yintercept = 0, linetype = "dashed")
plist[[j]] = p3
j = j + 1
}
do.call("grid.arrange", c(plist, ncol = floor(sqrt(length(num)))))
View(plist)
floor(sqrt(length(num))))
floor(sqrt(length(num)))
do.call("grid.arrange", c(plist, ncol = floor(sqrt(length(num)))))
View(dat_G_CA)
View(dat_G_CA)
View(dat_A_US)
View(dat_A_US)
