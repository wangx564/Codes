sd$date = as.Date(sd$date)
sd_wk = sd %>%
SMA(Parks, n = 7)
sd = dat_G_USA %>%
filter(!is.na(sub_region_2)) %>%
select(date, sub_region_2, Parks) %>%
na.omit()
sd$date = as.Date(sd$date)
sd_wk = sd
sd_wk$Parks = SMA(sd_wk$Parks, n = 7)
sd_wk = na.omit(sd_wk)
View(sd_wk)
sd = dat_G_USA %>%
filter(!is.na(sub_region_2)) %>%
select(date, sub_region_2, Parks) %>%
na.omit()
sd$date = as.Date(sd$date)
sd = dat_G_USA %>%
filter(!is.na(sub_region_2))
pd = dat_G_USA[c(2:4, 8:ncol(dat_G_USA))] %>%
subset(is.na(sub_region_2) == TRUE) %>%
select(-sub_region_2) %>%
na.omit()
View(pd)
sd = dat_G_USA %>%
filter(!is.na(sub_region_2))
View(sd)
sd = dat_G_USA %>%
filter(!is.na(sub_region_2)) %>%
group_by(sub_region_2)
View(sd)
sd = dat_G_USA %>%
filter(!is.na(sub_region_2)) %>%
select(date, sub_region_2, Parks) %>%
na.omit()
sd$date = as.Date(sd$date)
nrow(sd)
sd[2,2]
sd[16,2]
a = 1
i = 1
while (i <= nrow(sd)){
j = a #starting index
S = sd[a, 2]
if (sd$Parks[i] != S){
k = i - 1 #end index
sd$Parks[j:k] = SMA(sd$Parks[j:k], n = 7)
a = i
}
i = i + 1
}
a = 1
i = 1
while (i <= nrow(sd)){
j = a #starting index
S = sd[a, 2]
if (sd$Parks[i] != S){
k = i - 1 #end index
if ((k - j + 1) >= 7){
sd$Parks[j:k] = SMA(sd$Parks[j:k], n = 7)
a = i}
}
i = i + 1
}
sd = dat_G_USA %>%
filter(!is.na(sub_region_2)) %>%
select(date, sub_region_2, Parks) %>%
na.omit()
sd$date = as.Date(sd$date)
a = 1
i = 1
while (i <= nrow(sd)){
j = a #starting index
S = sd$sub_region_2[a]
if (sd$sub_region_2[i] != S){
k = i - 1 #end index
if ((k - j + 1) >= 7){
sd$Parks[j:k] = SMA(sd$Parks[j:k], n = 7)
a = i}
}
i = i + 1
}
3>=4
sd$Parks[1:3]
sd = dat_G_USA %>%
filter(!is.na(sub_region_2)) %>%
select(date, sub_region_2, Parks) %>%
na.omit()
sd$date = as.Date(sd$date)
sd$Parks[1:3]
SMA(sd$Parks[1:3], n = 7)
SMA(sd$Parks[1:7], n = 7)
sd = dat_G_USA %>%
filter(!is.na(sub_region_2)) %>%
select(date, sub_region_2, Parks) %>%
na.omit()
sd$date = as.Date(sd$date)
a = 1
i = 1
while (i <= nrow(sd)){
j = a #starting index
S = sd$sub_region_2[a]
if (sd$sub_region_2[i] != S){
k = i - 1 #end index
if ((k-j+1) >= 7){
sd$Parks[j:k] = SMA(sd$Parks[j:k], n = 7)
a = i
print(c(j,k))}
}
i = i + 1
}
sd$sub_region_2[7]
sd$sub_region_2[6]
6 - 1 + 1
sd = dat_G_USA %>%
filter(!is.na(sub_region_2)) %>%
select(date, sub_region_2, Parks) %>%
na.omit()
sd$date = as.Date(sd$date)
#deseasonalize each county
a = 1
i = 1
while (i <= nrow(sd)){
j = a #starting index
S = sd$sub_region_2[a]
if (sd$sub_region_2[i] != S){
k = i - 1 #end index
if ((k-j+1) >= 7){
sd$Parks[j:k] = SMA(sd$Parks[j:k], n = 7)
a = i
print(c(j,k))
}
}
i = i + 1
}
sd = dat_G_USA %>%
filter(!is.na(sub_region_2)) %>%
select(date, sub_region_2, Parks) %>%
na.omit()
sd$date = as.Date(sd$date)
a = 1
i = 1
while (i <= nrow(sd)){
j = a #starting index
S = sd$sub_region_2[a]
if (sd$sub_region_2[i] != S){
k = i - 1 #end index
if ((k-j+1) >= 7){
sd$Parks[j:k] = SMA(sd$Parks[j:k], n = 7)
a = i
print(c(j,k))
}
}
i = i + 1
}
#plot change in mobility to parks for counties in State Wyoming
sd = dat_G_USA %>%
filter(!is.na(sub_region_2)) %>%
select(date, sub_region_2, Parks) %>%
na.omit()
sd$date = as.Date(sd$date)
#deseasonalize each county
a = 1
i = 1
while (i <= nrow(sd)){
j = a #starting index
S = sd$sub_region_2[a]
if (sd$sub_region_2[i] != S){
k = i - 2 #end index
if ((k-j+1) >= 7){
sd$Parks[j:k] = SMA(sd$Parks[j:k], n = 7)
a = i
print(c(j,k))
}
}
i = i + 1
}
`{r, cache = TRUE, echo = FALSE, message = FALSE}
#plot change in mobility to parks for counties in State Wyoming
sd = dat_G_USA %>%
filter(!is.na(sub_region_2)) %>%
select(date, sub_region_2, Parks) %>%
na.omit()
sd$date = as.Date(sd$date)
sd  = sd[6,]
sd = dat_G_USA %>%
filter(!is.na(sub_region_2)) %>%
select(date, sub_region_2, Parks) %>%
na.omit()
sd$date = as.Date(sd$date)
sd  = sd[6,]
sd = dat_G_USA %>%
filter(!is.na(sub_region_2)) %>%
select(date, sub_region_2, Parks) %>%
na.omit()
sd$date = as.Date(sd$date)
sd = sd[1:6,]
))
clear.off()
packages = c("xlsx", "tidyverse", "viridis", "forecast", "fpp", "ggfortify", "zoo", "xts", "forecast", "TTR")
#install.packages(packages)
lapply(packages, library, character.only = TRUE)
p8
S = toupper(readline(prompt = "Enter State: "))
pd = dat_A_US %>%
filter(toupper(region) == S)
pd = as.data.frame(t(as.matrix(pd[,7:ncol(pd)])))
pd = cbind(rownames(pd), data.frame(pd, row.names = NULL))
colnames(pd) = c("Dates","Driving")
pd$Dates = as.Date(pd$Dates)
#remove seasonality using SMA()
example_d = na.omit(pd)
pd1 = xts(example_d$Driving, as.Date(example_d$Dates, format = '%Y-%m-%d'))
s_wk = SMA(pd1, n = 7)
s_mth = SMA(pd1, n = 30)
#regulation info
reg_info.new = reg_info_A %>%
filter(toupper(State.Territory) == S) %>%
.[,2:ncol(reg_info_A)] %>%
mutate(Dates = rownames(.)) %>%
gather(key = "Regulation", value = "Dates", -Dates)
reg_info.new$Dates = as.Date(reg_info.new$Dates)
# to plot for state S + regulation timeline:
len = nrow(reg_info.new)
p1 = autoplot(s_wk) + xlab("") + ylab("% Change in Mobility") + ggtitle(paste("Adjusted %Change in Driving Mobility of State", S, "(n = 7)"))
p1 = p1 + geom_vline(data = reg_info.new, mapping = aes(xintercept = as.POSIXct(reg_info.new[, 2], tz = "UTC"), colour = Regulation), size = 0.7, show.legend = TRUE) + geom_hline(yintercept = 0, size = 1, linetype = "dashed", colour = "Red") + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + scale_x_date(date_labels = "%y %b %d") #x-intercept needs to have the same form as the time(s_wk)
p2 = autoplot(s_mth) + xlab("") + ylab("% Change in Mobility") + ggtitle(paste("Adjusted %Change in Driving Mobility of State", S, "(n = 30)"))
p2 = p2 + geom_vline(data = reg_info.new, mapping = aes(xintercept = as.POSIXct(reg_info.new[, 2], tz = "UTC"), colour = Regulation), size = 0.7, show.legend = TRUE) + geom_hline(yintercept = 0, size = 1, linetype = "dashed", colour = "Red") + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + scale_x_date(date_labels = "%y %b %d")
pd2 = dat_A_US %>%
filter(geo_type == "sub-region")
pd3 = as.data.frame(t(as.matrix(pd2[, 7:ncol(pd2)])))
pd3 = cbind(rownames(pd3), data.frame(pd3, row.names = NULL))
colnames(pd3) = c("Dates", pd2$region)
pd3$Dates = as.Date(pd3$Dates)
pd3 = na.omit(pd3)
#remove seasonality for each state (n=7)
ust_wk = pd3
i = 2
while (i <= ncol(ust_wk)){
ust_wk[,i] = SMA(ust_wk[,i], n = 7)
i = i + 1
}
ust_wk = na.omit(ust_wk)
#plot
usapd_wk = ust_wk  %>%
select(Dates, pd2$region) %>%
gather(key = "States", value = "Value", -Dates)
p3 = ggplot(usapd_wk, aes(x = Dates, y = Value)) + geom_line(aes(color = States), size = 0.1) + xlab("") + ylab("Mobility (% change)") + ggtitle("Adjusted %Change in Driving Mobility in USA (n = 7)") + theme_minimal()
#check if there's entry > 2
sl_wk = c("")
for (i in 1:nrow(usapd_wk)){
if(usapd_wk[i,3] > 2){
sl_wk = paste(sl_wk, usapd_wk[i,2])
}
}
#n = 30
ust_mth = pd3
i = 2
while (i <= ncol(ust_mth)){
ust_mth[,i] = SMA(ust_mth[,i], n = 30)
i = i + 1
}
ust_mth = na.omit(ust_mth)
#plot
usapd_mth = ust_mth  %>%
select(Dates, pd2$region) %>%
gather(key = "States", value = "Value", -Dates)
#check if there's entry > 2
sl_mth = c("")
for (i in 1:nrow(usapd_mth)){
if(usapd_mth[i,3] > 2){
sl_mth = paste(sl_mth, usapd_mth[i,2])
}
}
p4 = ggplot(usapd_mth, aes(x = Dates, y = Value)) + geom_line(aes(color = States), size = 0.1) + xlab("") + ylab("Mobility (% change)") + ggtitle("Adjusted %Change in Driving Mobility in USA (n = 30)") + theme_minimal()
usad = dat_A_US %>%
subset(geo_type == "country/region" & transportation_type == "driving")
usad = as.data.frame(t(as.matrix(usad[, 7:ncol(usad)])))
usad = cbind(rownames(usad), data.frame(usad, row.names = NULL))
colnames(usad) = c("Dates","Driving")
usad = na.omit(usad)
#black line is the USA in general
#n = 7
usad_wk = as.data.frame(cbind(as.character(usad$Dates), SMA(usad$Driving, n = 7)))%>% na.omit()
colnames(usad_wk) = c("Dates","Driving")
usad_wk$Dates = as.Date(usad_wk$Dates)
p5 = p3 + geom_line(aes(Dates, as.numeric(Driving)), usad_wk, size = 1) + geom_hline(yintercept = 0, size = 1, linetype = "dashed", colour = "Red") + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + scale_x_date(date_labels = "%y %b %d")
#n = 30
usad_mth = as.data.frame(cbind(as.character(usad$Dates), SMA(usad$Driving, n = 30)))%>% na.omit()
colnames(usad_mth) = c("Dates","Driving")
usad_mth$Dates = as.Date(usad_mth$Dates)
p6 = p4 + geom_line(aes(Dates, as.numeric(Driving)), usad_mth, size = 1) + geom_hline(yintercept = 0, size = 1, linetype = "dashed", colour = "Red") + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + scale_x_date(date_labels = "%y %b %d")
pd = dat_A_US %>%
filter(region == "Wyoming")
pd = as.data.frame(t(as.matrix(pd[,7:ncol(pd)])))
pd = cbind(rownames(pd), data.frame(pd, row.names = NULL))
colnames(pd) = c("Dates","Driving")
pd$Dates = as.Date(pd$Dates)
#remove seasonality using SMA()
example_d = na.omit(pd)
pd1 = xts(example_d$Driving, as.Date(example_d$Dates, format = '%Y-%m-%d'))
s_wk2 = SMA(pd1, n = 7)
s_wk3 = as.data.frame(cbind(na.omit(s_wk), na.omit(s_wk2)))
colnames(s_wk3) = c("Mississippi", "Wyoming")
s_wk4 = s_wk3 %>%
mutate(Dates = rownames(.)) %>%
gather(key = "States", value = "Value", -Dates)
s_wk4$Dates = as.Date(s_wk4$Dates)
p7 = ggplot(s_wk4, aes(x = Dates, y = Value)) + geom_line(aes(color = States), size = 0.1) + xlab("") + ylab("Mobility (% change)") + ggtitle("Compare Adjusted Driving Mobility in 2 States (n = 7)") + theme_minimal() + geom_hline(yintercept = 0, size = 1, linetype = "dashed", colour = "Red") + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + scale_x_date(date_labels = "%y %b %d")
# Investigate each county/city
hd = dat_A_US %>%
filter(sub.region == "Wyoming")
pd4 = as.data.frame(t(as.matrix(hd[,7:ncol(hd)])))
pd4 = cbind(rownames(pd4), data.frame(pd4, row.names = NULL))
colnames(pd4) = c("Dates", hd$region)
pd4$Dates = as.Date(pd4$Dates)
pd4 = na.omit(pd4)
#remove seasonality for each county (n=7)
ust_wk2 = pd4
i = 2
while (i <= ncol(ust_wk2)){
ust_wk2[,i] = SMA(ust_wk2[,i], n = 7)
i = i + 1
}
ust_wk2 = na.omit(ust_wk2)
#remove seasonality for each county (n=30)
ust_mth2 = pd4
i = 2
while (i <= ncol(ust_mth2)){
ust_mth2[,i] = SMA(ust_mth2[,i], n = 30)
i = i + 1
}
ust_mth2 = na.omit(ust_mth2)
#plot
shadesOfGrey = colorRampPalette(c("grey0", "grey70"))
usapd_wk2 = ust_wk2  %>%
select(Dates, hd$region) %>%
gather(key = "County", value = "Value", -Dates)
p8 = ggplot(usapd_wk2, aes(x = Dates, y = Value)) + geom_line(aes(color = County), size = 0.1) + xlab("") + ylab("Mobility (% change)") + ggtitle("Adjusted %Change inDriving Mobility in Wyoming Counties (n = 7)") + theme_minimal()
p10 = p8 + geom_vline(xintercept = reg_info.new$Dates, colour = shadesOfGrey(nrow(reg_info.new)), size = 0.7, linetype = "dashed") + geom_text(data = reg_info.new, mapping = aes(x = Dates, y = 400, label = Regulation), angle = 90, size = 3) + geom_hline(yintercept = 0, size = 1, linetype = "dashed", colour = "Red") + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + scale_x_date(date_labels = "%y %b %d")
usapd_mth2 = ust_mth2  %>%
select(Dates, hd$region) %>%
gather(key = "County", value = "Value", -Dates)
p9 = ggplot(usapd_mth2, aes(x = Dates, y = Value)) + geom_line(aes(color = County), size = 0.1) + xlab("") + ylab("Mobility (% change)") + ggtitle("Adjusted %Change in Driving Mobility in Wyoming Counties (n = 30)") + theme_minimal()
p11 = p9 + geom_vline(xintercept = reg_info.new$Dates, colour = shadesOfGrey(nrow(reg_info.new)), size = 0.7, linetype = "dashed") + geom_text(data = reg_info.new, mapping = aes(x = Dates, y = 400, label = Regulation), angle = 90, size = 3) + geom_hline(yintercept = 0, size = 1, linetype = "dashed", colour = "Red") + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + scale_x_date(date_labels = "%y %b %d")
L1 = usapd_wk2$County[order(usapd_wk2$Value, decreasing = T)[1]]
#Park County
L2 = usapd_mth2$County[order(usapd_mth2$Value, decreasing = T)[1]]
#Park County
p10
# Load the packages
packages = c("xlsx", "tidyverse", "viridis", "forecast", "fpp", "ggfortify", "zoo", "xts", "forecast", "TTR")
#install.packages(packages)
lapply(packages, library, character.only = TRUE)
#plot change in mobility to parks for counties in State Wyoming
sd = dat_G_USA %>%
filter(!is.na(sub_region_2)) %>%
select(date, sub_region_2, Parks) %>%
na.omit()
sd$date = as.Date(sd$date)
colnames(sd) = c("date", "County", "Parks")
#deseasonalize each county
a = 1
i = 1
while (i <= nrow(sd)){
j = a #starting index
S = sd$County[a]
if ((sd$County[i] != S) & isFALSE(S == sd$County[nrow(sd)])){
k = i - 1 #end index
a = i
n = k-j+1
if (n >= 7){
sd$Parks[j:k] = SMA(sd$Parks[j:k], n = 7)
}
}
else if (S == sd$County[nrow(sd)]){
k = nrow(sd)
i = k
n = k-j+1
if (n >= 7){
sd$Parks[j:nrow(sd)] = SMA(sd$Parks[j:nrow(sd)], n = 7)
}
}
i = i + 1
}
#plot
sd = na.omit(sd)
p5 = ggplot(sd, aes(x = date, y = Parks)) + geom_line(aes(color = County), size = 0.5) + xlab("") + ylab("Mobility (% change)") + ggtitle("Adjusted %Change of Mobility in WYOMING Counties (n = 7)") + theme_minimal()
p6 = p5 + geom_vline(xintercept = reg_info.new$Dates, colour = shadesOfGrey(nrow(reg_info.new)), size = 1, linetype = "dashed") + geom_text(data = reg_info.new, mapping = aes(x = Dates, y = 100, label = Regulation), angle = 90, size = 3) + geom_hline(yintercept = 0, size = 1, linetype = "dashed", colour = "Red")
p6
# Investigate each county/city
hd = dat_A_US %>%
filter(sub.region == "Wyoming")
pd4 = as.data.frame(t(as.matrix(hd[,7:ncol(hd)])))
pd4 = cbind(rownames(pd4), data.frame(pd4, row.names = NULL))
colnames(pd4) = c("Dates", hd$region)
pd4$Dates = as.Date(pd4$Dates)
pd4 = na.omit(pd4)
#remove seasonality for each county (n=7)
ust_wk2 = pd4
i = 2
while (i <= ncol(ust_wk2)){
ust_wk2[,i] = SMA(ust_wk2[,i], n = 7)
i = i + 1
}
ust_wk2 = na.omit(ust_wk2)
#remove seasonality for each county (n=30)
ust_mth2 = pd4
i = 2
while (i <= ncol(ust_mth2)){
ust_mth2[,i] = SMA(ust_mth2[,i], n = 30)
i = i + 1
}
ust_mth2 = na.omit(ust_mth2)
#plot
shadesOfGrey = colorRampPalette(c("grey0", "grey70"))
usapd_wk2 = ust_wk2  %>%
select(Dates, hd$region) %>%
gather(key = "County", value = "Value", -Dates)
p8 = ggplot(usapd_wk2, aes(x = Dates, y = Value)) + geom_line(aes(color = County), size = 0.1) + xlab("") + ylab("Mobility (% change)") + ggtitle("Adjusted %Change of Driving Mobility in Wyoming Counties (n = 7)") + theme_minimal()
p10 = p8 + geom_vline(xintercept = reg_info.new$Dates, colour = shadesOfGrey(nrow(reg_info.new)), size = 0.7, linetype = "dashed") + geom_text(data = reg_info.new, mapping = aes(x = Dates, y = 400, label = Regulation), angle = 90, size = 3) + geom_hline(yintercept = 0, size = 1, linetype = "dashed", colour = "Red") + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + scale_x_date(date_labels = "%y %b %d")
usapd_mth2 = ust_mth2  %>%
select(Dates, hd$region) %>%
gather(key = "County", value = "Value", -Dates)
p9 = ggplot(usapd_mth2, aes(x = Dates, y = Value)) + geom_line(aes(color = County), size = 0.1) + xlab("") + ylab("Mobility (% change)") + ggtitle("Adjusted %Change of Driving Mobility in Wyoming Counties (n = 30)") + theme_minimal()
p11 = p9 + geom_vline(xintercept = reg_info.new$Dates, colour = shadesOfGrey(nrow(reg_info.new)), size = 0.7, linetype = "dashed") + geom_text(data = reg_info.new, mapping = aes(x = Dates, y = 400, label = Regulation), angle = 90, size = 3) + geom_hline(yintercept = 0, size = 1, linetype = "dashed", colour = "Red") + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + scale_x_date(date_labels = "%y %b %d")
L1 = usapd_wk2$County[order(usapd_wk2$Value, decreasing = T)[1]]
#Park County
L2 = usapd_mth2$County[order(usapd_mth2$Value, decreasing = T)[1]]
#Park County
p10
#plot change in mobility to parks for counties in State Wyoming
sd = dat_G_USA %>%
filter(!is.na(sub_region_2)) %>%
select(date, sub_region_2, Parks) %>%
na.omit()
sd$date = as.Date(sd$date)
colnames(sd) = c("date", "County", "Parks")
#deseasonalize each county
a = 1
i = 1
while (i <= nrow(sd)){
j = a #starting index
S = sd$County[a]
if ((sd$County[i] != S) & isFALSE(S == sd$County[nrow(sd)])){
k = i - 1 #end index
a = i
n = k-j+1
if (n >= 7){
sd$Parks[j:k] = SMA(sd$Parks[j:k], n = 7)
}
}
else if (S == sd$County[nrow(sd)]){
k = nrow(sd)
i = k
n = k-j+1
if (n >= 7){
sd$Parks[j:nrow(sd)] = SMA(sd$Parks[j:nrow(sd)], n = 7)
}
}
i = i + 1
}
#plot
sd = na.omit(sd)
p5 = ggplot(sd, aes(x = date, y = Parks)) + geom_line(aes(color = County), size = 0.5) + xlab("") + ylab("Mobility (% change)") + ggtitle("Adjusted %Change of Mobility in WYOMING Counties (n = 7)") + theme_minimal()
p6 = p5 + geom_vline(xintercept = reg_info.new$Dates, colour = shadesOfGrey(nrow(reg_info.new)), size = 1, linetype = "dashed") + geom_text(data = reg_info.new, mapping = aes(x = Dates, y = 100, label = Regulation), angle = 90, size = 3) + geom_hline(yintercept = 0, size = 1, linetype = "dashed", colour = "Red")
p5
p6
p1
#Plot State-Level Data
pd = dat_G_USA[c(2:4, 8:ncol(dat_G_USA))] %>%
subset(is.na(sub_region_2) == TRUE) %>%
select(-sub_region_2) %>%
na.omit()
#use SMA (n = 7)
pd_wk = pd
for (i in 4:ncol(pd_wk)){
pd_wk[, i] = SMA(pd_wk[, i], n = 7)
}
pd_wk = na.omit(pd_wk)
#use SMA (n = 30)
pd_mth = pd
for (i in 4:ncol(pd_mth)){
pd_mth[, i] = SMA(pd_mth[, i], n = 30)
}
pd_mth = na.omit(pd_mth)
#plot
pd_wk = pd_wk %>%
select(names(pd_wk)[3:ncol(pd_wk)]) %>%
gather(key = "Places", value = "Value", -date)
pd_wk$date = as.Date(pd_wk$date)
pd_mth = pd_mth %>%
select(names(pd_mth)[3:ncol(pd_mth)]) %>%
gather(key = "Places", value = "Value", -date)
pd_mth$date = as.Date(pd_mth$date)
p1 = ggplot(pd_wk , aes(x = date, y = Value)) + geom_line(aes(color = Places), size = 0.5) + xlab("") + ylab("Mobility (% change)") + ggtitle("Adjusted %Change of Mobility in WYOMING (n = 7)") + theme_minimal()
p1 = p1 + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + scale_x_date(date_labels = "%y %b %d") + geom_hline(yintercept = 0, linetype = "dashed") + geom_hline(yintercept = 0, size = 1, linetype = "dashed", colour = "Red")
p2 = ggplot(pd_mth, aes(x = date, y = Value)) + geom_line(aes(color = Places), size = 0.5) + xlab("") + ylab("Mobility (% change)") + ggtitle("Adjusted %Change of Mobility in WYOMING (n = 30)") + theme_minimal()
p2 = p2 + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + scale_x_date(date_labels = "%y %b %d") + geom_hline(yintercept = 0, linetype = "dashed") + geom_hline(yintercept = 0, size = 1, linetype = "dashed", colour = "Red")
p1
p3
#Add Regulation Timeline to Plot
reg_info.new = reg_info_G %>%
filter(toupper(State.Territory) == "WYOMING") %>%
.[,2:ncol(reg_info_G)] %>%
mutate(Dates = rownames(.)) %>%
gather(key = "Regulation", value = "Dates", -Dates)
reg_info.new$Dates = as.Date(reg_info.new$Dates)
shadesOfGrey = colorRampPalette(c("grey0", "grey70"))
p3 = p1 + geom_vline(xintercept = reg_info.new$Dates, colour = shadesOfGrey(nrow(reg_info.new)), size = 0.7, linetype = "dashed") + geom_text(data = reg_info.new, mapping = aes(x = Dates, y = 100, label = Regulation), angle = 90, size = 4)
p4 = p2 + geom_vline(xintercept = reg_info.new$Dates, colour = shadesOfGrey(nrow(reg_info.new)), size = 0.7, linetype = "dashed") + geom_text(data = reg_info.new, mapping = aes(x = Dates, y = 100, label = Regulation), angle = 90, size = 4)
p3
